var A={};var c=(i=HTMLElement)=>class extends i{static value="Hello";async enter(e){}async#r(e){this.dispatchEvent(new CustomEvent("beforeopen",{detail:{path:e,properties:this.getProperties()}})),this.dataset.entering="",await Promise.allSettled(this.getAnimations({subtree:!0}).map(r=>r.finished)),this.#e(),this.dispatchEvent(new Event("afteropen"))}async#e(){delete this.dataset.entering,this.toggleAttribute("open",!0),this.setAttribute("aria-current","page")}getProperties(){return Object.entries(this.dataset).reduce((t,s)=>{let o=s[0];if(!o.startsWith(u))return t;let a=o[u.length].toLowerCase()+o.substring(u.length+1),n=s[1];return t[a]=n,t},{})}};var P="route-dialog",T=class extends c(HTMLDialogElement){};var g="route-page",y=class extends c(){};customElements.get(g)==null&&customElements.define(g,y);var M=(r=>(r.Change="change",r.PathChange="pathchange",r))(M||{}),N=new CSSStyleSheet;N.replaceSync(A);var v=new Promise(i=>document.addEventListener("DOMContentLoaded",i)),u="property",b="path-router",E=class extends HTMLElement{get routePages(){return Array.from(this.querySelectorAll(`:scope > ${g}`),e=>e)}get routeDialogs(){return Array.from(this.querySelectorAll(`:scope > [is="${P}"]`),e=>e)}get routes(){return[...this.routePages,...this.routeDialogs]}async navigate(e){}async enterRoute(){}async exitRoute(){}#r(e){for(let r=0;r<this.routes.length;r++){let t=this.routes[r];this.#o(t);let[s,o]=this.routeMatchesPath(t,e,t.classList.contains("dialog"));this.#s(t,o),s==!0&&this.#e(t)}}#e(e){e.enter("")}#s(e,r){for(let[t,s]of Object.entries(r)){let o=u+t.substring(0,1).toUpperCase()+t.substring(1);e.dataset[o]=s}}#o(e){e.classList.remove("match")}routeMatchesPath(e,r,t=!1){let s=e.getAttribute("path")??"";if(s.trim()==""||s=="/"&&t==!1)return[r.trim()==""||r=="/",{}];if(s.trim()==r.trim()&&t==!1)return[!0,{}];let o=r.split("#"),a=o[0],n=o.length>1?o[1]:null,l=s.split("/"),h=a.split("/");if((e.closest(".dialog")==null?"Page":"Dialog")=="Page")return this.routeTypeMatches(e,h,l,"route-page");if(n==null)return[!1,{}];let m=n.split("/");return this.routeTypeMatches(e,m,l,'[is="route-dialog"]')}routeTypeMatches(e,r,t,s){if(r.length==1&&r[0].trim()=="")return[!1,{}];let o=[],a=e.parentElement?.closest(s);for(;a!=null;){if(a.classList.contains("match")==!1)return[!1,{}];o.push(a),a=a.parentElement?.closest(s)}let l=o.reverse().reduce((p,d,f)=>`${p==""?"":p+"/"}${d.getAttribute("path")??""}`,"").split("/"),h=[...r].filter((p,d)=>{let f=l[d];return!(f?.startsWith(":")==!0||f==p)}),{match:R,properties:m}=this.pathArraySelectsRouteArray(h,t);return[R,m]}getRouteProperties(e){if(e!=null)return e.getProperties();let r={};for(let t=0;t<this.routes.length;t++){let s=this.routes[t];Object.assign(r,s.getProperties())}return r}pathArraySelectsRouteArray(e,r){let t={};if(r.length>e.length)return{match:!1,properties:t};let s=!1;for(let o=0;o<e.length;o++){let a=r[o],n=e[o];if(a==null)return{match:s,properties:t};if(a.startsWith(":")==!1){if(a!=n)return{match:!1,properties:t}}else t[a.substring(1)]=n;s=!0}return{match:s,properties:t}}connectedCallback(){this.activateRouteManagement()}disconnectedCallback(){this.deactivateRouteManagement()}#t=!1;async activateRouteManagement(){await v,this.#t=!0,this.hasAttribute("debug")&&console.info("Activated Router")}async deactivateRouteManagement(){this.#t=!1,this.hasAttribute("debug")&&console.info("Deactivated Router")}static observedAttributes=["path"];attributeChangedCallback(e,r,t){e=="path"&&this.#t==!0&&this.#r(t)}};customElements.get(b)==null&&customElements.define(b,E);export{b as COMPONENT_TAG_NAME,E as PathRouterElement,M as PathRouterEvent,u as ROUTEPROPERTY_DATA_ATTRIBUTE_KEYWORD};
